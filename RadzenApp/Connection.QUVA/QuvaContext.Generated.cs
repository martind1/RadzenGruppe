//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 02.06.2022 09:22:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using RadzenApp.Entities.QUVA;

namespace RadzenApp.Connection.QUVA
{

    public partial class QuvaContext : DbContext
    {

        public QuvaContext() :
            base()
        {
            OnCreated();
        }

        public QuvaContext(DbContextOptions<QuvaContext> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseOracle(@"USER ID=QUVA;PASSWORD=quva;DATA SOURCE=""(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST = 127.0.0.1)(PORT = 1521))(CONNECT_DATA=(SERVICE_NAME = blacki)))"";PERSIST SECURITY INFO=True",
                    b => b.UseOracleSQLCompatibility("11"));
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<SPEDITIONEN> SPEDITIONEN_Tbl
        {
            get;
            set;
        }

        public virtual DbSet<KARTEN> KARTEN_Tbl
        {
            get;
            set;
        }

        public virtual DbSet<FAHRZEUGE> FAHRZEUGE_Tbl
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.SPEDITIONENMapping(modelBuilder);
            this.CustomizeSPEDITIONENMapping(modelBuilder);

            this.KARTENMapping(modelBuilder);
            this.CustomizeKARTENMapping(modelBuilder);

            this.FAHRZEUGEMapping(modelBuilder);
            this.CustomizeFAHRZEUGEMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region SPEDITIONEN Mapping

        private void SPEDITIONENMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SPEDITIONEN>().ToTable(@"SPEDITIONEN", @"QUVA");
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.SPED_ID).HasColumnName(@"SPED_ID").IsRequired().ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.SPED_NAME).HasColumnName(@"SPED_NAME").HasColumnType(@"VARCHAR2").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.WERK_NR).HasColumnName(@"WERK_NR").HasColumnType(@"VARCHAR2").IsRequired().ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.REPLIKATION).HasColumnName(@"REPLIKATION").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.ERFASST_VON).HasColumnName(@"ERFASST_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.ERFASST_AM).HasColumnName(@"ERFASST_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.ERFASST_DATENBANK).HasColumnName(@"ERFASST_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.GEAENDERT_VON).HasColumnName(@"GEAENDERT_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.GEAENDERT_AM).HasColumnName(@"GEAENDERT_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.GEAENDERT_DATENBANK).HasColumnName(@"GEAENDERT_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.ANZAHL_AENDERUNGEN).HasColumnName(@"ANZAHL_AENDERUNGEN").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.BEMERKUNG).HasColumnName(@"BEMERKUNG").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(2000);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.NAME_LANG).HasColumnName(@"NAME_LANG").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.KREDITOR_NR).HasColumnName(@"KREDITOR_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.PALETTENKONTO).HasColumnName(@"PALETTENKONTO").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.PAL_INV_DTM).HasColumnName(@"PAL_INV_DTM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.PAL_INV_BST_E).HasColumnName(@"PAL_INV_BST_E").ValueGeneratedNever().HasPrecision(6, 0);
            modelBuilder.Entity<SPEDITIONEN>().Property(x => x.PAL_INV_BST_D).HasColumnName(@"PAL_INV_BST_D").ValueGeneratedNever().HasPrecision(6, 0);
            modelBuilder.Entity<SPEDITIONEN>().HasKey(@"SPED_ID");
            modelBuilder.Entity<SPEDITIONEN>().HasIndex(@"SPED_NAME", @"WERK_NR").IsUnique(true).HasDatabaseName(@"UK_SPED");
        }

        partial void CustomizeSPEDITIONENMapping(ModelBuilder modelBuilder);

        #endregion

        #region KARTEN Mapping

        private void KARTENMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<KARTEN>().ToTable(@"KARTEN", @"QUVA");
            modelBuilder.Entity<KARTEN>().Property(x => x.KART_ID).HasColumnName(@"KART_ID").IsRequired().ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.KART_NR).HasColumnName(@"KART_NR").HasColumnType(@"VARCHAR2").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<KARTEN>().Property(x => x.KUNW_NR).HasColumnName(@"KUNW_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<KARTEN>().Property(x => x.REPLIKATION).HasColumnName(@"REPLIKATION").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<KARTEN>().Property(x => x.ERFASST_VON).HasColumnName(@"ERFASST_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.ERFASST_AM).HasColumnName(@"ERFASST_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<KARTEN>().Property(x => x.ERFASST_DATENBANK).HasColumnName(@"ERFASST_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.GEAENDERT_VON).HasColumnName(@"GEAENDERT_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.GEAENDERT_AM).HasColumnName(@"GEAENDERT_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<KARTEN>().Property(x => x.GEAENDERT_DATENBANK).HasColumnName(@"GEAENDERT_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.ANZAHL_AENDERUNGEN).HasColumnName(@"ANZAHL_AENDERUNGEN").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.BEMERKUNG).HasColumnName(@"BEMERKUNG").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(2000);
            modelBuilder.Entity<KARTEN>().Property(x => x.WERK_NR).HasColumnName(@"WERK_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<KARTEN>().Property(x => x.MARA_NR).HasColumnName(@"MARA_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(18);
            modelBuilder.Entity<KARTEN>().Property(x => x.TRANSPORTMITTEL).HasColumnName(@"TRANSPORTMITTEL").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.SPEDITION).HasColumnName(@"SPEDITION").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<KARTEN>().Property(x => x.AUFK_NR).HasColumnName(@"AUFK_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<KARTEN>().Property(x => x.SOLLMENGE).HasColumnName(@"SOLLMENGE").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.PEKR_ID).HasColumnName(@"PEKR_ID").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.PEKR_NR).HasColumnName(@"PEKR_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<KARTEN>().Property(x => x.PEKR_BEZ).HasColumnName(@"PEKR_BEZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(60);
            modelBuilder.Entity<KARTEN>().Property(x => x.KUND_KNZ).HasColumnName(@"KUND_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'J'");
            modelBuilder.Entity<KARTEN>().Property(x => x.SPERR_KNZ).HasColumnName(@"SPERR_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.SPENDER_KNZ).HasColumnName(@"SPENDER_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.SILO_NR).HasColumnName(@"SILO_NR").ValueGeneratedNever().HasPrecision(3, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.SORTE_KNZ).HasColumnName(@"SORTE_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.FREMDWAEGUNG).HasColumnName(@"FREMDWAEGUNG").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.TARA_GEWICHT).HasColumnName(@"TARA_GEWICHT").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TARA_DATUM).HasColumnName(@"TARA_DATUM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<KARTEN>().Property(x => x.MAX_BRUTTO).HasColumnName(@"MAX_BRUTTO").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TROCKEN_FEUCHT).HasColumnName(@"TROCKEN_FEUCHT").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<KARTEN>().Property(x => x.PROBENPFLICHT).HasColumnName(@"PROBENPFLICHT").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'J'");
            modelBuilder.Entity<KARTEN>().Property(x => x.TEILMENGE1).HasColumnName(@"TEILMENGE1").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TEILMENGE2).HasColumnName(@"TEILMENGE2").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TEILMENGE3).HasColumnName(@"TEILMENGE3").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TEILMENGE4).HasColumnName(@"TEILMENGE4").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.TEILMENGE5).HasColumnName(@"TEILMENGE5").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<KARTEN>().Property(x => x.ORI_KART_NR).HasColumnName(@"ORI_KART_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<KARTEN>().Property(x => x.EINGANG_KNZ).HasColumnName(@"EINGANG_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.AUFBAU).HasColumnName(@"AUFBAU").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<KARTEN>().Property(x => x.TARA_TAGE).HasColumnName(@"TARA_TAGE").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.KART_NR_2).HasColumnName(@"KART_NR_2").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<KARTEN>().Property(x => x.KOMBI_KNZ).HasColumnName(@"KOMBI_KNZ").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<KARTEN>().Property(x => x.SPED_ID).HasColumnName(@"SPED_ID").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<KARTEN>().Property(x => x.FRZG_ID).HasColumnName(@"FRZG_ID").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<KARTEN>().HasKey(@"KART_ID");
            modelBuilder.Entity<KARTEN>().HasIndex(@"KART_NR", @"WERK_NR").IsUnique(true).HasDatabaseName(@"UK1_KART");
        }

        partial void CustomizeKARTENMapping(ModelBuilder modelBuilder);

        #endregion

        #region FAHRZEUGE Mapping

        private void FAHRZEUGEMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FAHRZEUGE>().ToTable(@"FAHRZEUGE", @"QUVA");
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.FRZG_ID).HasColumnName(@"FRZG_ID").IsRequired().ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.TRANSPORTMITTEL).HasColumnName(@"TRANSPORTMITTEL").HasColumnType(@"VARCHAR2").IsRequired().ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.WERK_NR).HasColumnName(@"WERK_NR").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.SPEDITION).HasColumnName(@"SPEDITION").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.TARA_GEWICHT).HasColumnName(@"TARA_GEWICHT").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.TARA_DATUM).HasColumnName(@"TARA_DATUM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.REPLIKATION).HasColumnName(@"REPLIKATION").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.ERFASST_VON).HasColumnName(@"ERFASST_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.ERFASST_AM).HasColumnName(@"ERFASST_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.ERFASST_DATENBANK).HasColumnName(@"ERFASST_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.GEAENDERT_VON).HasColumnName(@"GEAENDERT_VON").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.GEAENDERT_AM).HasColumnName(@"GEAENDERT_AM").HasColumnType(@"DATE").ValueGeneratedNever();
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.GEAENDERT_DATENBANK).HasColumnName(@"GEAENDERT_DATENBANK").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.ANZAHL_AENDERUNGEN).HasColumnName(@"ANZAHL_AENDERUNGEN").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.BEMERKUNG).HasColumnName(@"BEMERKUNG").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(2000);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.FAHRZEUGTYP).HasColumnName(@"FAHRZEUGTYP").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.TARA_FREI_ANZAHL).HasColumnName(@"TARA_FREI_ANZAHL").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.MAX_BRUTTO).HasColumnName(@"MAX_BRUTTO").ValueGeneratedNever().HasPrecision(9, 3);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.FLAGS).HasColumnName(@"FLAGS").HasColumnType(@"VARCHAR2").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<FAHRZEUGE>().Property(x => x.SPED_ID).HasColumnName(@"SPED_ID").ValueGeneratedNever().HasPrecision(9, 0);
            modelBuilder.Entity<FAHRZEUGE>().HasKey(@"FRZG_ID");
            modelBuilder.Entity<FAHRZEUGE>().HasIndex(@"TRANSPORTMITTEL", @"WERK_NR", @"SPEDITION").IsUnique(true).HasDatabaseName(@"UK_FRZG");
        }

        partial void CustomizeFAHRZEUGEMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SPEDITIONEN>().HasMany(x => x.KARTEN).WithOne(op => op.SPEDITIONEN).HasForeignKey(@"SPED_ID").IsRequired(false);
            modelBuilder.Entity<SPEDITIONEN>().HasMany(x => x.FAHRZEUGE).WithOne(op => op.SPEDITIONEN).HasForeignKey(@"SPED_ID").IsRequired(false);

            modelBuilder.Entity<KARTEN>().HasOne(x => x.SPEDITIONEN).WithMany(op => op.KARTEN).HasForeignKey(@"SPED_ID").IsRequired(false);
            modelBuilder.Entity<KARTEN>().HasOne(x => x.FAHRZEUGE).WithMany(op => op.KARTEN).HasForeignKey(@"FRZG_ID").IsRequired(false);

            modelBuilder.Entity<FAHRZEUGE>().HasMany(x => x.KARTEN).WithOne(op => op.FAHRZEUGE).HasForeignKey(@"FRZG_ID").IsRequired(false);
            modelBuilder.Entity<FAHRZEUGE>().HasOne(x => x.SPEDITIONEN).WithMany(op => op.FAHRZEUGE).HasForeignKey(@"SPED_ID").IsRequired(false);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
